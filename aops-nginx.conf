# For more information on configuration, see:
#   * Official English Documentation: http://nginx.org/en/docs/
#   * Official Russian Documentation: http://nginx.org/ru/docs/

user root;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /var/run/nginx.pid;

# Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
}

http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 2048;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;
    client_max_body_size 25M;

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
    include /etc/nginx/conf.d/*.conf;

    server {
        # 设置前端端口号
        listen       80 default_server;
        listen       [::]:80 default_server;
        # 设置IP/域名
        server_name  localhost;

	# gzip config
    	gzip on;
    	gzip_min_length 1k;
    	gzip_comp_level 6;
    	gzip_types text/plain text/css text/javascript application/json application/javascript application/x-javascript application/xml;
    	gzip_vary on;
    	gzip_disable "MSIE [1-6]\.";


        # Load configuration files for the default server block.
        include /etc/nginx/default.d/*.conf;

        location ~ .*\.(js|css|ico|png|jpg|eot|svg|ttf|woff|html|txt|pdf|) {
            root /opt/aops/web/dist;
            # 清空缓存时限
            expires 30d;
        }

        # 保证前端路由变动时nginx仍以index.html作为入口
        location / {
            try_files $uri $uri/ /index.html;
            if (!-e $request_filename){
                rewrite ^(.*)$ /index.html last;
            }
        }

        location /api/ {
            proxy_pass http://target_ip:11111/;
        }

        location /api/domain {
            proxy_pass http://target_ip:11114/;
            rewrite ^/api/(.*) /$1 break;
        }

        location /api/host {
            proxy_pass http://127.0.0.1:11114/;
            rewrite ^/api/(.*) /$1 break;
        }

        location /api/confs {
            proxy_pass http://127.0.0.1:11114/;
            rewrite ^/api/(.*) /$1 break;
        }

        location /api/management {
            proxy_pass http://127.0.0.1:11114/;
            rewrite ^/api/(.*) /$1 break;
        }

        location /api/check {
            proxy_pass http://target_ip:11112/;
            rewrite ^/api/(.*) /$1 break;
        }

        location /api/diag {
            proxy_pass http://127.0.0.1:11113/;
            rewrite ^/api/(.*) /$1 break;
        }

        location /api/gala-spider {
            proxy_pass http://127.0.0.1:11115/;
            rewrite ^/api/(.*) /$1 break;
        }

        location /api/vulnerability {
            proxy_pass http://target_ip:11116/;
            rewrite ^/api/(.*) /$1 break;
        }

        # 后端服务器代理 将所有/api/开头的路由指向后端
        # location /api/ {
            # add_header 'Access-Control-Allow-Origin' '*';
            # add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            # add_header 'Access-Control-Allow-Credentials' 'true';
            # add_header 'Access-Control-Allow-Header' 'Authorization, Content-Type, Accept, Origin, User-Agent, DNT, Cache-Control, X-Mx-ReqToken, X-Data-Type, X-Requested-With, X-Auth-Token';
            # 后端路由：IP/api/
            # proxy_pass http://localhost/api/;
            # 前端连接后端后，等待后端返回响应的超时限制
            # proxy_read_timeout 150;
        # }
    }


# 当需要设置为https协议时使用以下模板
# Settings for a TLS enabled server.
#
#    server {
#        listen       443 ssl http2 default_server;
#        listen       [::]:443 ssl http2 default_server;
#        server_name  _;
#        root         /usr/share/nginx/html;
#
#        ssl_certificate "/etc/pki/nginx/server.crt";
#        ssl_certificate_key "/etc/pki/nginx/private/server.key";
#        ssl_session_cache shared:SSL:1m;
#        ssl_session_timeout  10m;
#        ssl_ciphers PROFILE=SYSTEM;
#        ssl_prefer_server_ciphers on;
#
#        # Load configuration files for the default server block.
#        include /etc/nginx/default.d/*.conf;
#
#        location / {
#        }
#
#        error_page 404 /404.html;
#            location = /40x.html {
#        }
#
#        error_page 500 502 503 504 /50x.html;
#            location = /50x.html {
#        }
#    }

}
